#!/usr/bin/bash

# Project-local wrapper to run the locally-built OpenSSL inside this repository.
# Don't move this file away from the repository root.
# Run it as ./openssl [args...]

# Resolve the repository root (directory of this script)
REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
OPENSSL_BIN="$REPO_ROOT/oqs-provider/.local/bin/openssl"
# Use the installed OpenSSL modules directory so the default provider (with DRBG)
# is available, and we also copy oqsprovider.so there in the install script.
export OPENSSL_MODULES="$REPO_ROOT/oqs-provider/.local/lib64/ossl-modules"

# Ensure the locally-built libssl/libcrypto are found by the dynamic loader when
# invoking the local OpenSSL binary so users don't have to set LD_LIBRARY_PATH
# manually before running ./openssl.
export LD_LIBRARY_PATH="$REPO_ROOT/oqs-provider/.local/lib:$REPO_ROOT/oqs-provider/.local/lib64:${LD_LIBRARY_PATH:-}"

if [ -x "$OPENSSL_BIN" ]; then
  exec "$OPENSSL_BIN" "$@"
else
  echo "Error: local OpenSSL not found at: $OPENSSL_BIN" >&2
  echo "Run the repo setup/build (e.g. scripts/install_pqc_openssl.sh) to build OpenSSL." >&2
  exit 2
fi
